## GCP Cloud infrastructure

// Cloud provider
provider "google" {
  credentials = "${file(".account_credentials/supportforce_terraforming_cloud.json")}"
  project = "support-force"
  region = "us-east4"
  zone = "us-east4-a"
}


// Terraform plugin for creating random ids
resource "random_id" "instance_id" {
  byte_length = 8
}


// vpc network
## requires compute engine api
resource "google_compute_network" "support_force_network" {
  project = "support-force"
  name = "support-force-network"
  auto_create_subnetworks = true
  routing_mode = "GLOBAL"
}


// global address for cloudsql
resource "google_compute_global_address" "cloudsql_private_address" {
  project = "support-force"
  name = "cloudsql-private-address"
  purpose = "VPC_PEERING"
  address_type = "INTERNAL"
  prefix_length = 16
  network = "${google_compute_network.support_force_network.self_link}"
}


// google service networking connection
// depends on cloud resource management api, service networking api,
resource "google_service_networking_connection" "cloudsql_vpc_connection" {
  network = "${google_compute_network.support_force_network.self_link}"
  service = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [
    "${google_compute_global_address.cloudsql_private_address.name}"
  ]
}


// CloudSQL instance
// depends on cloudsql admin api
// user,password and database creation is manual
resource "google_sql_database_instance" "support_force_cloudsql" {
  project = "support-force"
  name = "sfsql-${random_id.instance_id.hex}"
  region = "us-east4"

  database_version = "POSTGRES_9_6"

  depends_on = ["google_service_networking_connection.cloudsql_vpc_connection"]

  settings {
    tier = "db-f1-micro"
    ip_configuration {
      ipv4_enabled = false
      private_network = "${google_compute_network.support_force_network.self_link}"
    }
    backup_configuration {
      ## binary_log_enabled = ...only available for MySQL...
      enabled = true
      start_time = "00:00"
    }
    maintenance_window {
      day = "7"
      hour = "3"
      update_track = "stable"
    }
  }
}


// website storage bucket
## requires cloud storage json api
resource "google_storage_bucket" "sf-website-bucket" {
  project = "support-force"
  name = "supportforce-website-bucket"
  location = "US"
  storage_class = "MULTI_REGIONAL"
  force_destroy = true

  versioning {
    enabled = true
  }

  website {
    main_page_suffix = "index.html"
    not_found_page = "404.html"
  }

  cors {
    origin = ["*"]
    method = ["*"]
    response_header = [
      "Access-Control-Allow-Origin", 
      "Access-Control-Allow-Credentials", 
      "Access-Control-Expose-Headers", 
      "Access-Control-Max-Age", 
      "Access-Control-Allow-Methods", 
      "Access-Control-Allow-Headers"
    ]
    ## max_age_seconds = ...default... 
  }

  ## logging = ...leave to stackdriver...

  ## encryption = ...default...
}


// kubernetes cluster
## requires kubernetes engine api
resource "google_container_cluster" "supportforce_cluster" {
  project = "support-force"
  name = "supportforce-cluster"
  location = "us-east4-a"
}



